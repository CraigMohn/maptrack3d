% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw3dMap.R
\name{draw3dMap}
\alias{draw3dMap}
\title{render a 3-D map from elevation and data and 
   add a set of paths to the plot}
\usage{
draw3dMap(paths = NULL, mapWindow = NULL, USStatevec = NULL,
  CAProvincevec = NULL, USParkvec = NULL, parkDir = NULL,
  worldCountryvec = NULL, cropbox = NULL, mapbuffer = 0,
  mapmergebuffer = 0, rectangularMap = TRUE, elevDataSource = "SRTM",
  mapDataDir = NULL, resstr = "_1arc_v3_bil", rasterFileSetNames = NULL,
  featureDataSource = "Shapefiles", shapefileDir = NULL,
  writeShapefiles = TRUE, year = 2017, includeAllRoads = FALSE,
  zeroBufferTowns = FALSE, zeroBufferWater = FALSE, writeElevFile = FALSE,
  writeFeatureFile = FALSE, rasterDir = NULL,
  rasterFileSetWriteName = NULL, drawRGL = TRUE, res3dplot = 2500,
  drawProj4 = NULL, maxElev = 3000, vScale = 1.5, townLevel = 3,
  roadLevel = 4, waterALevel = 4, waterLLevel = 5,
  rglColorScheme = "default", mapColorDepth = 16, rglNAcolor = "Blue",
  rglNegcolor = "Red", citycolor = "SlateGray", watercolor = "Blue",
  roadcolor = "Black", glaciercolor = "White", rglShininess = 0,
  rglSpecular = "black", rglDiffuse = "white", rglAmbient = "white",
  rglEmission = "black", rglSmooth = TRUE, rglAlpha = 1,
  rglAntiAlias = TRUE, rglTheta = 0, rglPhi = 15, saveRGL = FALSE,
  mapoutputdir = NULL, outputName = NULL,
  workProj4 = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
  maxrastercells = 2.5e+08, maxRasterize = 5e+05, polySimplify = 0,
  polyMethod = "vis", polyWeighting = 0.85, polySnapInt = 1e-04,
  silent = FALSE, noisy = TRUE)
}
\arguments{
\item{paths}{a set of segments which are multilinestrings. a 
data frame or tibble containing at least: position_lat.dd,
position_lon.dd,(or lat,lon)(both numeric,decimal degrees),
segment(numeric)}

\item{mapWindow}{a vector of 4 numbers which describe the region drawn.
The format is c(lon_min, lon_max, lat_min, lat_max)}

\item{USStatevec}{vector of standard 2-letter abbreviations of US states, or
pre-defined regional aggregations of states for use in defining map or
finding features to include in the map}

\item{CAProvincevec}{vector of standard 2-letter abbreviations of Canadian
provinvces states, or pre-defined regional aggregations of states for 
use in defining map or finding features to include in the map}

\item{USParkvec}{vector of US National Park names.  If specified, map
will include the specified Parks but not the listed US states}

\item{parkDir}{location of downloaded US Park boundary shapefiles 
downloaded from, for example, https://irma.nps.gov/DataStore/}

\item{worldCountryvec}{vector of 3-letter ISO country abbreviations}

\item{cropbox}{vector of 4 numbers for cropping the map defined above
The format is c(lon_min, lon_max, lat_min, lat_max).}

\item{mapbuffer}{numeric value to expand defined map}

\item{mapmergebuffer}{numeric value to expand components of the 
map defined before merging, to eliminate gaps from minor
boundary inconsistencies}

\item{rectangularMap}{draw the entire rectangle enclosing the specified
map area, as long as all relevant state/province rasters have been loaded}

\item{elevDataSource}{"SRTM" to load data from saved SRTM data, 
"Raster" to load saved raster files}

\item{mapDataDir}{directory where zipped SRTM data files reside}

\item{resstr}{suffix on SRTM data files after lon/lat info}

\item{rasterFileSetNames}{vector of names of saved raster data files}

\item{featureDataSource}{"Shapefiles" to load saved shapefiles, "TIGER"
to fetch TIGER data for US states, "Raster" to load saved raster data
from directory specified}

\item{shapefileDir}{location to load/save shapefiles}

\item{writeShapefiles}{write/overwrite shapefiles if TIGER data is used}

\item{year}{numeric year to use in calls for map boundaries/features}

\item{includeAllRoads}{include all roads in shapefile, not just highways}

\item{zeroBufferTowns}{use zero buffer trick to repair town polygon shapefile}

\item{zeroBufferWater}{use zero buffer trick to repair water polygon shapefile}

\item{writeElevFile}{save the elevation raster files}

\item{writeFeatureFile}{save the feature data raster files}

\item{rasterDir}{location to load and save raster files}

\item{rasterFileSetWriteName}{name to use for the raster fileset written}

\item{drawRGL}{if TRUE, open a window with the interactive 3D map}

\item{res3dplot}{used to scale resolution, the maximum size the square root
of the output height times width.  aggregation done in integer multiples.}

\item{drawProj4}{string containing the projection to use in drawing the map,
"UTM" (zone based on center of map),"Lambert","Albers", or any Proj4 string}

\item{maxElev}{all elevations greater than this are colored the same}

\item{vScale}{vertical scale parameter, use larger for smaller areas}

\item{townLevel}{display towns ranked this number or higher: 
3=all towns     5=larger towns (in US >50k)}

\item{roadLevel}{display roads ranked this number or higher:
2=Service Drive, Bike Path, etc      3=Local Street
4=Secondary Hwy                      5=Primary Hwy/Transit}

\item{waterALevel}{display areal water ranked this number or higher:
2=res/treatmentpond/pit/quarry       3=lake/pond/swamp/stream
4=class 2 or 3 bigger than 1k ha     5=named lake/pond/swamp/stream
6=large lake/pond/swamp/stream       7=Ocean/Bay/Est/Sound
8=glacier}

\item{waterLLevel}{display linear water ranked this number or higher:
2=canal/ditch                        3=braided stream
4=stream/river                       5=named stream/river
6=named stream/river containing the string "RIV"}

\item{rglColorScheme}{name of color scheme from 
c("default","beach","viridis","plasma","terrain","oleron","snow","oslo",
  "desert","lajolla","niccoli","bright",
  "bing","maptoolkit-topo","nps","apple-iphoto")}

\item{mapColorDepth}{number of bits per color channel in map image}

\item{rglNAcolor}{color used to display NA elevations}

\item{rglNegcolor}{color used to display elevations below sea level}

\item{citycolor}{color used to display cities}

\item{watercolor}{color used to display water,}

\item{roadcolor}{color used to display roads}

\item{glaciercolor}{color used to display glaciers}

\item{rglShininess}{number controlling surface shininess in rgl rendering}

\item{rglSpecular}{light color for specular light}

\item{rglDiffuse}{light color for diffuse light}

\item{rglAmbient}{light color for ambient light}

\item{rglEmission}{color of emitted light}

\item{rglSmooth}{use Gouraud shading if TRUE}

\item{rglAlpha}{alpha value for surface}

\item{rglAntiAlias}{antialias points and lines when drawing surface}

\item{rglTheta}{coordinate for light source}

\item{rglPhi}{coordinate for light source}

\item{saveRGL}{save the map to an html file}

\item{mapoutputdir}{location for saved html map file}

\item{outputName}{name of saved html map}

\item{workProj4}{coordinte reference projection string}

\item{maxrastercells}{maximum number of cells in each written raster}

\item{maxRasterize}{number of items for calls to velox$rasterize}

\item{polySimplify}{amount of polygon simplification, see help
for rmapshaper::ms_simplify}

\item{polyMethod}{simplification method either "vis" or "dp"}

\item{polyWeighting}{see help for rmapshaper::ms_simplify}

\item{polySnapInt}{see help for rmapshaper::ms_simplify}

\item{silent}{suppress most output}

\item{noisy}{more output to track progress}
}
\description{
\code{draw3dMap} draw 3D map from elevation and feature data,
   and add a set of paths to the plot
}
\details{
Create a map displaying the tracks specified.  Tracks may be drawn in one
   specified color, with each separate track drawn in a different color from
   a specified palette, or as a series of closely spaced dots (which may
   be prodded into appearing as a line through judicious choice of point
   size and alpha) with the color varying based on speed and the chosen
   palette
}
